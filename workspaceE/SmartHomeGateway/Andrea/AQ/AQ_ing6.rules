//non rileva il primo piano poichè il ciclo ff muore
//0=no fascia   3= siamo nella fascia e invia richiesta     (AQ system)
//1=puoi cambiare     2= non puoi        (questo codice)
//variabili necessarie per capire se è richiesto l'adattamento
var boolean adaptation_required_gf
var boolean adaptation_required_ff
//knowledge del managing
var Number ex_Pm10
var Number liv_Pm10
var Number ki_Pm10
var Number ba_Pm10
var Number cor_Pm10
var Number liv
var Number bat
var Number cor
var Number kit
var Number check_unicita_gf
var Number check_unicita_ff
var Number c_gf
var Number c_ff
val Number Hysteresis = 0.04 //era 0,04

//start
rule "StartLoop_MySmartHomeAQ"
when
 System started
then
    start_a_aq.sendCommand(OFF) 
    start_p_aq.sendCommand(OFF)
    start_m_gf.sendCommand(ON)
    start_e_gf.sendCommand(OFF)
    start_m_ff.sendCommand(ON)
    start_e_ff.sendCommand(OFF)
    adaptation_required_gf= false
    adaptation_required_ff= false
    cor=0
    bat=0
    liv=0
    kit=0
    check_unicita_ff=0
    check_unicita_gf=0
    forzatura.sendCommand(0)
    if (Managing_System_Active.state == ON) Managing_System_Active.postUpdate(OFF)
end

rule "Monitor_m_gf"
when
	Item start_m_gf received command ON 
then
    sendCommand(start_m_gf, OFF)
    FF_Children_Bedroom_Fire_Alarm.sendCommand(ON)
    GF_Kitchen_Fire_Alarm.sendCommand(OFF)
	liv_Pm10= (GF_Living_AqPm10.state as DecimalType).doubleValue
	ba_Pm10= (GF_Bathroom_AqPm10.state as DecimalType).doubleValue
	ki_Pm10= (GF_Kitchen_AqPm10.state as DecimalType).doubleValue
    ex_Pm10= (SimAqi_Pm10.state as DecimalType).doubleValue
    c_gf=1
    sendCommand(gf_slave_to_aq_master, ON)
end


rule "Monitor_m_ff"
when
    Item start_m_ff received command ON  
then
    sendCommand(start_m_ff, OFF)
    FF_Bedroom_Fire_Alarm.sendCommand(ON)
    GF_Bathroom_Fire_Alarm.sendCommand(OFF)
    cor_Pm10= (FF_Corridor_AqPm10.state as DecimalType).doubleValue
    ex_Pm10=(SimAqi_Pm10.state as DecimalType).doubleValue
    c_ff=1
    sendCommand(ff_slave_to_aq_master, ON)
end


//componente che aggrega le informazioni dei due monitor per passare all'analisi
rule "Aggregator_m_gf_m_ff_a_aq"
when
	Item ff_slave_to_aq_master received command ON or
    Item gf_slave_to_aq_master received command ON
then    
    GF_Living_Fire_Alarm.sendCommand(ON)
    createTimer(now.plusSeconds(5)) [|
        FF_Bedroom_Fire_Alarm.sendCommand(OFF)
        FF_Children_Bedroom_Fire_Alarm.sendCommand(OFF)
        GF_Living_Fire_Alarm.sendCommand(OFF)
        sendCommand(start_a_aq, ON)
    ]
end

rule "Analyze_a_aq"
when
 Item start_a_aq received command ON
then
    sendCommand(start_a_aq,OFF)
    //se l'aria dentro è più sporca dell'esterno e le finestre sono chiuse richiedo l'adattamento al piano terra
    if(c_gf==1){
        c_gf=0
        if ((liv_Pm10 > (ex_Pm10+Hysteresis) && GF_Living_Window.state==CLOSED) ||
            (ba_Pm10 > (ex_Pm10+Hysteresis) &&  GF_Bathroom_Window.state==CLOSED) ||
            (ki_Pm10 > (ex_Pm10+Hysteresis) && GF_Kitchen_Window.state==CLOSED) ||
            (liv_Pm10 < (ex_Pm10-Hysteresis) && GF_Living_Window.state==OPEN) ||
            (ba_Pm10 < (ex_Pm10-Hysteresis) &&  GF_Bathroom_Window.state==OPEN) ||
            (ki_Pm10 < (ex_Pm10-Hysteresis) && GF_Kitchen_Window.state==OPEN)) {
            createTimer(now.plusSeconds(1)) [|
                //GF_Bathroom_Fire_Alarm.sendCommand(ON)
                check_unicita_gf=1
                adaptation_required_gf= true
            ]
	    }
    }   
    //se l'aria dentro è più sporca dell'esterno e le finestre sono chiuse richiedo l'adattamento al primo piano 
    if(c_ff==1){
        c_ff=0
        if ((cor_Pm10 > (ex_Pm10+Hysteresis) && (FF_ChildrenRoom_Window.state==CLOSED || FF_Bedroom_Window.state==CLOSED)) || 
            (cor_Pm10 < (ex_Pm10-Hysteresis) && (FF_ChildrenRoom_Window.state==OPEN || FF_Bedroom_Window.state==OPEN))) {    
            createTimer(now.plusSeconds(1)) [|
                //GF_Kitchen_Fire_Alarm.sendCommand(ON)
                check_unicita_ff=1
                adaptation_required_ff=true
            ]
        }
    }
    if(adaptation_required_ff || adaptation_required_gf ){    
        sendCommand(start_a_aq,OFF)
        forzatura.sendCommand(2)
        //GF_Kitchen_Fire_Alarm.sendCommand(OFF)
        //GF_Bathroom_Fire_Alarm.sendCommand(OFF)
        //GF_Living_Fire_Alarm.sendCommand(ON)
        createTimer(now.plusSeconds(1)) [|
            //GF_Living_Fire_Alarm.sendCommand(OFF)
            sendCommand(start_p_aq,ON)
        ]                    
    }
    //se qualche piano richiede l'adattamento chiamiamo il planning e affermiamo la necessità di prevalere sul managed attraverso forzatura=2 che bloccherà 
    //le azioni del managed per permettere al managing di agire indisturbato per gestire l' "emergenza"

    //se non è richiesto l'adattamento
    else{
        //se forzatura=3 significa che il managed richiede di gestire le finestre (siamo in una fascia oraria evidentemente) e se non c'è adattamento richiesto 
        //lasciamo al managed il controllo delle finestre
        if(forzatura.state==3) 
            forzatura.sendCommand(1)
            //GF_Bathroom_Fire_Alarm.sendCommand(ON)
        if(ff_slave_to_aq_master.state==ON){
            ff_slave_to_aq_master.sendCommand(OFF)
                GF_Bathroom_Fire_Alarm.sendCommand(ON)
                createTimer(now.plusSeconds(1)) [|
                    sendCommand(start_m_ff, ON)
                ]
        }
        if(gf_slave_to_aq_master.state==ON){
            gf_slave_to_aq_master.sendCommand(OFF)
            GF_Kitchen_Fire_Alarm.sendCommand(ON)
            createTimer(now.plusSeconds(1)) [|
                sendCommand(start_m_gf, ON)
            ]
        }
    }
end

rule "Plan_p_aq"
when
 Item start_p_aq received command ON
then
    sendCommand(start_p_aq, OFF)
    //se è richiesto adattamento al piano terra pianifico cosa fare attraverso i flag per ogni piano (1=apertura richiesta:0=chiusura richiesta)
    if(check_unicita_gf==1 &&  adaptation_required_gf==true){
        check_unicita_gf=0
        adaptation_required_gf==false
        if(liv_Pm10 > (ex_Pm10+Hysteresis) && GF_Living_Window.state==CLOSED){
		    liv=1 	//apri living
        }
	    else if (liv_Pm10 < (ex_Pm10-Hysteresis) && GF_Living_Window.state==OPEN){
		    liv=2	//chiudi living
        }
	    if (ba_Pm10 > (ex_Pm10+Hysteresis) &&  GF_Bathroom_Window.state==CLOSED){
		    bat=1
        }
	    else if(ba_Pm10 < (ex_Pm10-Hysteresis) &&  GF_Bathroom_Window.state==OPEN){
		    bat=2
        }
	    if(ki_Pm10 > (ex_Pm10+Hysteresis) && GF_Kitchen_Window.state==CLOSED){
		    kit=1
        }
	    else if(ki_Pm10 < (ex_Pm10-Hysteresis) && GF_Kitchen_Window.state==OPEN){
		    kit=2
        }

        createTimer(now.plusSeconds(1)) [|
            //GF_Bathroom_Fire_Alarm.sendCommand(OFF)
            sendCommand(start_e_gf, ON)
        ]
    }
    //lo stesso vale per il primo piano
    if(check_unicita_gf==0 && check_unicita_ff==1 && adaptation_required_ff==true){
        check_unicita_ff=0
        adaptation_required_ff=false
        if(cor_Pm10 > (ex_Pm10+Hysteresis) && (FF_ChildrenRoom_Window.state==CLOSED || FF_Bedroom_Window.state==CLOSED)){
            cor=1 
        }
        else if(cor_Pm10 < (ex_Pm10-Hysteresis) && (FF_ChildrenRoom_Window.state==OPEN || FF_Bedroom_Window.state==OPEN)){
            cor=2
        }
        createTimer(now.plusSeconds(1)) [|
            //GF_Kitchen_Fire_Alarm.sendCommand(OFF)
            sendCommand(start_e_ff, ON)
        ]
    }   
end

rule "Exec_e_ff"
when
    Item start_e_ff received command ON
then
    sendCommand(start_e_ff, OFF)
    if (cor==1) {
        cor=0
        FF_Bedroom_Window.postUpdate(OPEN)
        FF_ChildrenRoom_Window.postUpdate(OPEN)
    }
    else if (cor==2) {
        cor=0
        FF_Bedroom_Window.postUpdate(CLOSED)
        FF_ChildrenRoom_Window.postUpdate(CLOSED)
    }
    createTimer(now.plusSeconds(1)) [|
     //   GF_Kitchen_Fire_Alarm.sendCommand(OFF)
        sendCommand(start_m_ff, ON)
    ]
end

rule "Exec_e_gf"
when
 Item start_e_gf received command ON
then
//grazie alle variabili possiamo eseguire l'azione richiesta dal planning
    sendCommand(start_e_gf, OFF)
    if(liv==1){
        liv=0
        GF_Living_Window.postUpdate(OPEN)
    }
    else if(liv==2){
        liv=0
        GF_Living_Window.postUpdate(CLOSED)
    }
    if(bat==1){
        bat=0
        GF_Bathroom_Window.postUpdate(OPEN)
    }
    else if(bat==2){
        bat=0
        GF_Bathroom_Window.postUpdate(CLOSED)
    }
    if(kit==1){
        kit=0
        GF_Kitchen_Window.postUpdate(OPEN)
    }
    else if(kit==2){
        kit=0
        GF_Kitchen_Window.postUpdate(CLOSED)
    }

    createTimer(now.plusSeconds(1)) [|
        //GF_Bathroom_Fire_Alarm.sendCommand(OFF)
        sendCommand(start_m_gf, ON)
    ]
end
//lo stesso per il prinmo piano

