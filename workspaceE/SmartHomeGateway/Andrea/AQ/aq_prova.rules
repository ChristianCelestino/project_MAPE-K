rule "StartLoop_MySmartHomeAQ"
when
	System started
then
	start_a_aq.sendCommand(OFF)
	start_p_aq.sendCommand(OFF)
	start_m_ff.sendCommand(ON)
	start_e_ff.sendCommand(OFF)
	if (Managing_System_Active.state == ON) Managing_System_Active.postUpdate(OFF)
end


/*

rule "Monitor_m_ff"
when
	Item start_m_ff received command ON or 
	Time cron "0/30 0/1 * 1/1 * ? *" 
then
	sendCommand(start_m_ff, OFF)
	sendCommand(start_a_aq, ON)
	cor_Pm10= FF_Corridor_AqPm10.state as Number
end



rule "Analyze_a_aq"
when
	Item start_a_aq received command ON
then
	sendCommand(start_a_aq, OFF)
	if ((cor_Pm10 > ex_Pm10 && (FF_ChildrenRoom_Window.state==CLOSED || FF_Bedroom_Window.state==CLOSED)) || 
		(cor_Pm10 < ex_Pm10 && (FF_ChildrenRoom_Window.state==OPEN || FF_Bedroom_Window.state==OPEN))) {
		sendCommand(start_p_aq, ON)
	}	
	else{
		sendCommand(start_m_gf, ON)
		sendCommand(start_m_ff, ON)
	}
end



rule "Plan_p_aq"
when
	Item start_p_aq received command ON
then
	sendCommand(start_p_aq, OFF)
	if(cor_Pm10 > ex_Pm10 && (FF_ChildrenRoom_Window.state==CLOSED || FF_Bedroom_Window.state==CLOSED))
		cor=1
	if(cor_Pm10 < ex_Pm10 && (FF_ChildrenRoom_Window.state==OPEN || FF_Bedroom_Window.state==OPEN))
		cor=2
	sendCommand(start_e_ff, ON)
end

rule "Exec_e_ff"
when
	Item start_e_ff received command ON
then
	if (cor=1) {
		cor=0
		FF_Bedroom_Window.postUpdate(OPEN)
		FF_ChildrenRoom_Window.postUpdate(OPEN)
	}
	if (cor=2) {
		cor=0
		FF_Bedroom_Window.postUpdate(OPEN)
		FF_ChildrenRoom_Window.postUpdate(OPEN)
	}
	sendCommand(start_e_ff, OFF)
	sendCommand(start_m_ff, ON)
end



*/