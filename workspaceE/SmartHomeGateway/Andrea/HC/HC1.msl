abstract pattern MasterSlaveMAPE {
	system Sys

	group Master {
		components A, P
	}

	group Slave {
		managedSyS Sys
		components M, E
	}

	interaction Slave.M -> Master.A [*-SOME,1]
	interaction Master.P -> Slave.E [1,*-SOME]
	interaction Master.A -> Master.P [1,1]
}

//Aggregate MAPE loop for the concern confortableHeating
concrete pattern HC_MAPE concretizationOf MasterSlaveMAPE {
	system ConfortableHeating: MasterSlaveMAPE.Sys
    group MasterHC: MasterSlaveMAPE.Master
    group SlaveHC: MasterSlaveMAPE.Slave
}

//My smart home fire detection subsystem: being a domestic building, fire detection takes the form of a fire 
//alarm system, incorporating three smoke devices in two zones: one in the Corridor (First Floor), and two in the
//kitchen and LivingRoom (Ground floor) 
//Managed items: group switch gSmokeFF, gSmokeGF, Number MaxTemperatureGF, MaxTemperatureFF, Switch  Fire_Alarm

configuration MySmartHomeHC instanceOf HC_MAPE {
    
    hc_ff: HC_MAPE.ConfortableHeating //fire detection system for First Floor
    hc_gf: HC_MAPE.ConfortableHeating //fire detection system for Ground Floor
    
    //master
	hc_master: HC_MAPE.MasterHC {
		components a_hc:A, p_hc:P
	}
    
    //ground floor slave
	gf_slave: HC_MAPE.SlaveHC {
		managedSyS hc_gf
		components m_gf:M, e_gf:E
	}

    //first floor slave
    ff_slave: HC_MAPE.SlaveHC {
		managedSyS hc_ff
		components m_ff:M, e_ff:E
	}

	//interactions
	hc_master.a_hc -> hc_master.p_hc
	gf_slave.m_gf -> hc_master.a_hc
	ff_slave.m_ff -> hc_master.a_hc
	hc_master.p_hc -> gf_slave.e_gf
	hc_master.p_hc -> ff_slave.e_ff
}
